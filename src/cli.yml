name: ripit
version: "0.1"
about: Copy commits between git repositories
args:
    # configuration
    - config_file:
        required: true
        help: "Path to configuration file"
        long_help: >
            A configuration file containing parameters related to the git
            repository is required.
            To create a new one, duplicate and modify config-template.yml,
            which contains descriptions of all possible options.

    # type of action
    - bootstrap:
        long: bootstrap
        help: "Bootstrap the local repository"
        long_help: >
            Before the two repositories can be synchronized, the local
            repository must be boostrapped, by creating a single commit
            containing the current state of the remote repository. This
            is done for each branch to synchronize.

    # behavioral features
    - uproot:
        short: u
        long: uproot
        help: "Allow commits uprooting"
        long_help: >
            By default, a commit with an unknown parent cannot be
            synchronized. This prevents mistakes and ensures the topology
            of the sync'ed repository is preserved.
            However, there are some legitimate cases when this situation can
            happen, for example when synchronizing a merge commit with
            one ancestor dating from prior to the bootstrap.
            In that case, we want to cherry-pick the commits brought by
            the merge (or in this context, "uproot" them).
            This behavior can be activated with this flag.

    # common options shared by every action
    - quiet:
        short: q
        long: quiet
        help: "Do not print detailed logs of the execution's progress"
    - yes:
        short: y
        long: yes
        help: "Automatic yes to prompts"
